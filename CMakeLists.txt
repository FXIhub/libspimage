PROJECT (spimage)


IF(WIN32)
	ADD_DEFINITIONS(-D_HDF5USEDLL_)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ELSE(WIN32)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=c99")
ENDIF(WIN32)
	

SET(BUILD_STATIC_LIB CACHE BOOL "If ON output static library. Otherwise output shared libraries.")

FIND_PATH (FFTW_INCLUDE_DIR fftw3.h PATHS /usr/include /sw/include)
FIND_PATH (PNG_INCLUDE_DIR png.h PATHS /usr/include /sw/include)
FIND_PATH (TIFF_INCLUDE_DIR tiff.h PATHS /usr/include /sw/include)
FIND_PATH (HDF5_INCLUDE_DIR hdf5.h PATHS /usr/include /sw/include)

IF(UNIX AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	IF(EXISTS /usr/lib64)
		SET(LIBRARY_SUFFIX 64)
	ENDIF(EXISTS /usr/lib64)
ENDIF(UNIX AND CMAKE_SIZEOF_VOID_P EQUAL 8)

FIND_LIBRARY (TIFF_LIBRARY tiff /usr/lib /sw/lib)
FIND_LIBRARY (PNG_LIBRARY png /usr/lib /sw/lib)
FIND_LIBRARY (HDF5_LIBRARY hdf5 /usr/lib /sw/lib)
FIND_LIBRARY (MATH_LIBRARY m /usr/lib /sw/lib)
FIND_LIBRARY (C_LIBRARY c /usr/lib /sw/lib)
FIND_LIBRARY (Z_LIBRARY z /usr/lib /sw/lib)
FIND_LIBRARY (JPEG_LIBRARY jpeg /usr/lib /sw/lib)
IF(CMAKE_BUILD_TYPE STREQUAL "debug")
		    FIND_LIBRARY (DMALLOC_LIBRARY dmalloc /usr/lib /sw/lib)
		    FIND_PATH (DMALLOC_INCLUDE_DIR dmalloc.h PATHS /usr/include /sw/include)	
		    IF(DMALLOC_LIBRARY)
		    		    ADD_DEFINITIONS(-D_USE_DMALLOC)
				    SET(USE_DMALLOC 1)
		    ENDIF(DMALLOC_LIBRARY)
ENDIF(CMAKE_BUILD_TYPE STREQUAL "debug")



IF(WIN32)
FIND_LIBRARY (FFTW3_LIBRARY fftw3 /usr/lib /sw/lib)
ELSE(WIN32)

IF(DOUBLE)
	FIND_LIBRARY (FFTW3_THREADS_LIBRARY fftw3_threads /usr/lib /sw/lib)	
ELSE(DOUBLE)
	FIND_LIBRARY(FFTW3F_LIBRARY fftw3f /usr/lib /sw/lib)
	FIND_LIBRARY (FFTW3F_THREADS_LIBRARY fftw3f_threads /usr/lib /sw/lib)	
ENDIF(DOUBLE)

FIND_LIBRARY (PTHREAD_LIBRARY pthread /usr/lib /sw/lib)	
ENDIF(WIN32)
SET(FFTW_LIBRARY ${FFTW3_LIBRARY} ${FFTW3F_LIBRARY} ${FFTW3F_THREADS_LIBRARY} ${FFTW3_THREADS_LIBRARY} ${PTHREAD_LIBRARY})




INCLUDE_DIRECTORIES(${FFTW_INCLUDE_DIR} ${PNG_INCLUDE_DIR} ${TIFF_INCLUDE_DIR} ${HDF5_INCLUDE_DIR})


LIST(APPEND OBJECTS  "image_util.c" "fft.c" "linear_alg.c" "mem_util.c")



IF(BUILD_STATIC_LIB)
	ADD_LIBRARY(spimage STATIC ${OBJECTS})
ELSE(BUILD_STATIC_LIB)
	ADD_LIBRARY(spimage SHARED ${OBJECTS})
ENDIF(BUILD_STATIC_LIB)

ADD_EXECUTABLE(tests ${OBJECTS} CuTest.c AllTests.c)


INSTALL(TARGETS spimage
  RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
  LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib${LIBRARY_SUFFIX}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib${LIBRARY_SUFFIX})
INSTALL(FILES spimage/fft.h spimage/image_util.h spimage/image.h spimage/linear_alg.h spimage/mem_util.h DESTINATION ${CMAKE_INSTALL_PREFIX}/include/spimage)
INSTALL(FILES spimage.h DESTINATION ${CMAKE_INSTALL_PREFIX}/include/)

LIST(APPEND TESTS_LIBRARIES  ${TIFF_LIBRARY} ${FFTW_LIBRARY} ${PNG_LIBRARY} ${HDF5_LIBRARY} ${MATH_LIBRARY} ${C_LIBRARY} ${Z_LIBRARY} ${JPEG_LIBRARY})
LIST(APPEND SPIMAGE_LIBRARIES  ${TIFF_LIBRARY} ${FFTW_LIBRARY} ${PNG_LIBRARY} ${HDF5_LIBRARY} ${MATH_LIBRARY} ${C_LIBRARY} ${Z_LIBRARY} ${JPEG_LIBRARY})
	    
IF(USE_DMALLOC)
LIST(APPEND SPIMAGE_LIBRARIES ${DMALLOC_LIBRARY})
LIST(APPEND TESTS_LIBRARIES ${DMALLOC_LIBRARY})
ENDIF(USE_DMALLOC)


TARGET_LINK_LIBRARIES(tests ${TESTS_LIBRARIES})
TARGET_LINK_LIBRARIES(spimage ${SPIMAGE_LIBRARIES})


ENABLE_TESTING()

ADD_TEST(tests tests)
